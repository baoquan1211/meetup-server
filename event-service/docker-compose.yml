version: "3.9"

networks:
  event-service_networks:
    driver: bridge
  microservices_networks:
    external: true

services:
  server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: event-service
    restart: always
    env_file:
      - .env
    environment:
      - APP_PORT=${APP_PORT}
      - APP_TITLE=${APP_TITLE}
      - APP_VERSION=${APP_VERSION}
      - ACCESS_KEY=${ACCESS_KEY}
      - REFRESH_KEY=${REFRESH_KEY}
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
    networks:
      - event-service_networks
      - microservices_networks
    depends_on:
      mysql:
        condition: service_healthy
      redis-stack:
        condition: service_started

  mysql:
    image: mysql
    restart: always
    container_name: event-db
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./data/mysql:/var/lib/mysql
    networks:
      - event-service_networks
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis-stack:
    image: redis/redis-stack:latest
    container_name: event-redis
    restart: always
    volumes:
      - ./data/redis-stack/:/data
      - ./data/redis-stack/redis.conf:/usr/local/etc/redis/redis.conf
    env_file:
      - .env
    networks:
      - event-service_networks
    command: ["redis-server", "--protected-mode", "no"]
